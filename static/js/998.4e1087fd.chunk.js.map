{"version":3,"file":"static/js/998.4e1087fd.chunk.js","mappings":"kRAGaA,EAAUC,EAAAA,GAAAA,IAAH,8GAOPC,EAAoBD,EAAAA,GAAAA,GAAH,8EAKjBE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wM,SC6DvB,EArEqB,WAAO,IAAD,IACjBI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAuB3D,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,+GAEGC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAiBhB,IAF9B,gBAEZiB,EAFY,EAEZA,KACRb,EAASa,GAHW,gDAKpBC,QAAQC,IAAR,MALoB,yDAAH,qDAQrBL,GACD,GAAE,CAACd,KAEJa,EAAAA,EAAAA,YAAU,WACR,GAAIV,EAAME,OAAQ,CAChB,IAAMe,EAAejB,EAAME,OAAOgB,QAAO,SAACC,EAAWC,GACnD,OAAOA,EAAMC,KAAO,IAAMF,CAC3B,GAAE,IACHhB,EAAUc,EACX,CACF,GAAE,CAACjB,KAGF,iCACE,UAACL,EAAD,CAAY2B,GAAIhB,EAAoBiB,QAApC,WACE,SAAC,MAAD,IADF,cAIA,UAAC/B,EAAD,YACE,gBACEgC,IACExB,EAAMyB,aAAN,6CACsCzB,EAAMyB,aAE9CC,IAAI,GACJC,MAAO,OAET,4BACE,kCAAQ3B,EAAM4B,mBACd,mDAAyC,GAArB5B,EAAM6B,cAAmBC,QAAQ,GAArD,UACA,sCACA,iCAAO9B,EAAM+B,aACb,oCACA,iCAAO7B,YAGX,oDACA,UAACR,EAAD,YACE,yBACE,SAAC,KAAD,CAAM4B,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,2BAGJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,QAIP,C,uJC1ED,IAAMC,EAAU,mCAEHC,EAAuB,WAClC,MAAM,2DAAN,OAAkED,EACnE,EAEYE,EAAsB,SAAAC,GACjC,MAAM,qDAAN,OAA4DH,EAA5D,kBAA6EG,EAC9E,EAEYxB,EAAmB,SAAAyB,GAC9B,MAAM,sCAAN,OAA6CA,EAA7C,oBAA2DJ,EAC5D,EAEYK,EAAkB,SAAAD,GAC7B,MAAM,sCAAN,OAA6CA,EAA7C,4BAAmEJ,EACpE,EAEYM,EAAqB,SAAAF,GAChC,MAAM,sCAAN,OAA6CA,EAA7C,4BAAmEJ,EAEpE,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  padding: 10px;\n  box-shadow: 0 4px 2px -2px gray;\n`;\n\nexport const WrapperAdditional = styled.ul`\n  box-shadow: 0 4px 2px -2px gray;\n  padding: 10px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n\n  background-color: beige;\n  padding: 5px;\n  border: 1px solid grey;\n`;\n","import axios from 'axios';\nimport { getMoviesByIdUrl } from 'moviesApi';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { LinkStyled, Wrapper, WrapperAdditional } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [genres, setGenres] = useState('');\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMoviesById = async () => {\n      try {\n        const { data } = await axios.get(getMoviesByIdUrl(movieId));\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMoviesById();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (movie.genres) {\n      const genresString = movie.genres.reduce((genresAcc, genre) => {\n        return genre.name + ' ' + genresAcc;\n      }, '');\n      setGenres(genresString);\n    }\n  }, [movie]);\n\n  return (\n    <>\n      <LinkStyled to={backLinkLocationRef.current}>\n        <BsArrowLeftShort />\n        Go back\n      </LinkStyled>\n      <Wrapper>\n        <img\n          src={\n            movie.poster_path &&\n            `https://image.tmdb.org/t/p/original${movie.poster_path}`\n          }\n          alt=\"\"\n          width={200}\n        />\n        <div>\n          <h2>{`${movie.original_title}`}</h2>\n          <p>User Score: {`${(movie.vote_average * 10).toFixed(2)} %`}</p>\n          <h3>Overview</h3>\n          <p>{`${movie.overview}`}</p>\n          <h3>Genres</h3>\n          <p>{`${genres}`}</p>\n        </div>\n      </Wrapper>\n      <p> Additional information</p>\n      <WrapperAdditional>\n        <li>\n          <Link to={'cast'}>Cast</Link>\n        </li>\n        <li>\n          <Link to={'reviews'}>Reviews</Link>\n        </li>\n      </WrapperAdditional>\n      <Suspense fallback={<div>loading ...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'ba0ad73f76c4f815c78bb333b0b1b2be';\n\nexport const getTrendingMoviesUrl = () => {\n  return `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n};\n\nexport const getMoviesByQueryUrl = query => {\n  return `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n};\n\nexport const getMoviesByIdUrl = id => {\n  return `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n};\n\nexport const getMovieCastUrl = id => {\n  return `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n};\n\nexport const getMovieReviewsUrl = id => {\n  return `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`;\n\n};\n"],"names":["Wrapper","styled","WrapperAdditional","LinkStyled","Link","movieId","useParams","useState","movie","setMovie","genres","setGenres","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMoviesById","axios","getMoviesByIdUrl","data","console","log","genresString","reduce","genresAcc","genre","name","to","current","src","poster_path","alt","width","original_title","vote_average","toFixed","overview","Suspense","fallback","API_KEY","getTrendingMoviesUrl","getMoviesByQueryUrl","query","id","getMovieCastUrl","getMovieReviewsUrl"],"sourceRoot":""}